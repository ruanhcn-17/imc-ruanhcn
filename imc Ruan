import 'package:flutter/material.dart';

void main() {
  runApp(CalculadoraIMC());
}

class CalculadoraIMC extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blueGrey, // Cor primária mais neutra
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Calculadora de IMC'),
          centerTitle: true,
          backgroundColor: Colors.blueGrey[700], // Cor do AppBar
        ),
        body: IMCForm(),
      ),
    );
  }
}

class IMCForm extends StatefulWidget {
  @override
  _IMCFormState createState() => _IMCFormState();
}

class _IMCFormState extends State<IMCForm> {
  final TextEditingController _pesoController = TextEditingController();
  final TextEditingController _alturaController = TextEditingController();
  String _resultado = '';

  // Função que calcula o IMC e define a classificação
  void _calcularIMC() {
    // Verificação dos valores de peso e altura
    double peso = double.tryParse(_pesoController.text) ?? 0;
    double altura = double.tryParse(_alturaController.text) ?? 0;

    if (peso > 0 && altura > 0) {
      double imc = peso / (altura * altura); // Cálculo do IMC
      String classificacao =
          _classificarIMC(imc); // Classificação de acordo com o IMC
      setState(() {
        _resultado =
            'Seu IMC é: ${imc.toStringAsFixed(2)}\nClassificação: $classificacao'; // Exibe o resultado
      });
    } else {
      setState(() {
        _resultado =
            'Por favor, insira valores válidos.'; // Erro se os valores forem inválidos
      });
    }
  }

  // Função que classifica o IMC
  String _classificarIMC(double imc) {
    if (imc < 18.5) {
      return 'Abaixo do peso';
    } else if (imc >= 18.5 && imc <= 24.9) {
      return 'Peso normal';
    } else if (imc >= 25.0 && imc <= 29.9) {
      return 'Sobrepeso';
    } else {
      return 'Obesidade';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Card(
          elevation: 8,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15),
          ),
          child: Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                Text(
                  'Calculadora de IMC',
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                    color: Colors.blueGrey[900], // Cor do título
                  ),
                ),
                SizedBox(height: 16),
                TextField(
                  controller: _pesoController,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(
                    labelText: 'Peso (kg)',
                    border: OutlineInputBorder(),
                  ),
                ),
                SizedBox(height: 16),
                TextField(
                  controller: _alturaController,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(
                    labelText: 'Altura (m)',
                    border: OutlineInputBorder(),
                  ),
                ),
                SizedBox(height: 16),
                ElevatedButton(
                  onPressed: _calcularIMC, // Botão para calcular o IMC
                  style: ElevatedButton.styleFrom(
                    padding: EdgeInsets.symmetric(horizontal: 32, vertical: 12),
                    backgroundColor: Colors.black, // Cor preta para o botão
                  ),
                  child: Text('Calcular IMC',
                      style: TextStyle(color: Colors.white)), // Texto em branco
                ),
                SizedBox(height: 16),
                Text(
                  _resultado,
                  style: TextStyle(
                      fontSize: 20,
                      color: Colors.blueGrey[900]), // Cor do resultado
                  textAlign: TextAlign.center,
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
